#!/usr/bin/env python3.7
import sys
import pickle
import json


# connectivity values: 1, 2, 3, 4, 5, 6, 7, 8, 12
modes = {'nonadj': frozenset((1, 2, 3, 4, 5, 6, 7, 8, 12)),
        'pole': frozenset((5, 12)),
        'center': frozenset((5, 7, 12))}

mode = 'nonadj' if len(sys.argv) == 1 else sys.argv[1].lower()
include_values = modes[mode]


with open('nonadj_lehmer.pickle', 'rb') as fp:
    nonadj = pickle.load(fp)

with open('equivalents_lehmer.pickle', 'rb') as fp:
    equivs = pickle.load(fp)

graph = {'nodes': list(), 'links': list()}
values = {p: len(s) for p, s in nonadj.items()}
processed = set()

for p, s in nonadj.items():
    if values[p] in include_values:
        graph['nodes'].append({'id': str(p), 'value': values[p], 'equivs': equivs[p]})
        for q in s:
            if q not in processed and values[q] in include_values:
                graph['links'].append({'source': str(p), 'target': str(q), 'value': values[p] + values[q]})
    processed.add(p)

with open(f'{mode}_graph.json', 'w') as fp:
    json.dump(graph, fp, indent=4)
    fp.write('\n')
